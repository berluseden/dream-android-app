rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función helper para verificar roles desde users/{uid}.role
    function hasRole(role) {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid))
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAdmin() {
      return isAuthenticated() && hasRole('admin');
    }
    
    function isCoach() {
      return isAuthenticated() && hasRole('coach');
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAssignedCoach(clientId) {
      return isCoach() && 
             get(/databases/$(database)/documents/users/$(clientId)).data.coach_id == request.auth.uid;
    }
    
    match /users/{userId} {
      allow read: if isOwner(userId) || isAssignedCoach(userId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']) ||
                       isAssignedCoach(userId) && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role', 'email']) ||
                       isAdmin();
      allow delete: if isAdmin();
    }
    
    // Mantener user_roles para compatibilidad hacia atrás (deprecated)
    match /user_roles/{roleId} {
      allow read: if isAuthenticated();
      // Solo admin puede escribir (para migración)
      allow write: if isAdmin();
    }
    
    match /muscles/{muscleId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /exercises/{exerciseId} {
      allow read: if true;
      allow create: if isAdmin() || isCoach();
      allow update, delete: if isAdmin() || 
                               (isCoach() && resource.data.created_by == request.auth.uid);
    }
    
    match /admin_settings/{doc} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /audit_logs/{logId} {
      allow read: if isAdmin();
      allow write: if false;
    }
    
    match /invitations/{inviteId} {
      allow read: if isAdmin() || (isAuthenticated() && resource.data.email == request.auth.token.email);
      allow write: if isAdmin();
    }
    
    match /backups/{jobId} {
      allow read, write: if isAdmin();
    }
    
    match /templates/{templateId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /mesocycles/{mesocycleId} {
      allow read: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
      allow create: if isOwner(request.resource.data.user_id) || isAdmin();
      allow update, delete: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
    }
    
    match /workouts/{workoutId} {
      allow read: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
      allow create: if isOwner(request.resource.data.user_id) || isAdmin();
      allow update, delete: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
    }
    
    match /coach_assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isCoach();
    }
    
    
    match /muscles/{muscleId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /exercises/{exerciseId} {
      allow read: if true;
      allow create: if isAdmin() || isCoach();
      allow update, delete: if isAdmin() || 
                               (isCoach() && resource.data.created_by == request.auth.uid);
    }
    
    match /admin_settings/{doc} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /audit_logs/{logId} {
      allow read: if isAdmin();
      allow write: if false;
    }
    
    match /invitations/{inviteId} {
      allow read: if isAdmin() || (isAuthenticated() && resource.data.email == request.auth.token.email);
      allow write: if isAdmin();
    }
    
    match /backups/{jobId} {
      allow read, write: if isAdmin();
    }
    
    match /templates/{templateId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /mesocycles/{mesocycleId} {
      allow read: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
      allow create: if isOwner(request.resource.data.user_id) || isAdmin();
      allow update, delete: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
    }
    
    match /workouts/{workoutId} {
      allow read: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
      allow create: if isOwner(request.resource.data.user_id) || isAdmin();
      allow update, delete: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
    }
    
    match /coach_assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isCoach();
    }
    
    match /user_strength_profile/{profileId} {
      allow read: if isAuthenticated() && profileId.matches('^' + request.auth.uid + '_.*');
      allow write: if isAuthenticated() && profileId.matches('^' + request.auth.uid + '_.*');
    }

    match /user_settings/{userId} {
      allow read: if isOwner(userId) || isAssignedCoach(userId) || isAdmin();
      allow create: if isOwner(userId) || isAdmin();
      allow update, delete: if isOwner(userId) || isAdmin();
    }
    
    match /sets/{setId} {
      allow read: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
      allow create: if isOwner(request.resource.data.user_id) || isAdmin();
      allow update, delete: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
    }
    
    match /weekly_targets/{targetId} {
      allow read: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
      allow create: if isOwner(request.resource.data.user_id) || isAdmin();
      allow update, delete: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
    }
    
    match /exercise_feedback/{feedbackId} {
      allow read: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
      allow create: if isOwner(request.resource.data.user_id) || isAdmin();
      allow update, delete: if isOwner(resource.data.user_id) || isAssignedCoach(resource.data.user_id) || isAdmin();
    }
    
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    match /offline_queue/{queueId} {
      allow read: if isAuthenticated() && resource.data.user_id == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.user_id == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.user_id == request.auth.uid;
    }
  }
}
